#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define U_TAPPING_TERM 200
#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    macros {
        intellij_open_terminal: intellij_open_terminal {
            label = "intellj_open_terminal";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp F12>,
                <&macro_release>,
                <&kp LALT>;
        };

        intellij_rename: intellij_rename {
            label = "intellij_rename";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp F6>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        intellij_debug: intellij_debug {
            label = "intellij_debug";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        intellij_run: intellij_run {
            label = "intellij_run";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        rectangle_left_half: rectangle_left_half {
            label = "rectangle_left_half";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LALT &kp LGUI>;
        };

        rectangle_right_half: rectangle_right_half {
            label = "rectangle_right_half";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LALT &kp LGUI>;
        };

        go_back: go_back {
            label = "go_back";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp LBKT>,
                <&macro_release>,
                <&kp LGUI>;
        };

        go_forward: go_forward {
            label = "go_forward";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp RBKT>,
                <&macro_release>,
                <&kp LGUI>;
        };

        switch_windows: switch_windows {
            label = "switch_windows";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp LGUI>;
        };

        open_find_files: open_find_files {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LG(LS(O))>;

            label = "OPEN_FIND_FILES";
        };
    };

    combos {
        compatible = "zmk,combos";

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 6>;
        };

        BrakLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        BrakRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        BraceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };

        GAME_MODE {
            bindings = <&to 5>;
            key-positions = <24 12 0>;
        };

        RightClickLeft {
            bindings = <&mkp RCLK>;
            key-positions = <14 15>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <20 21>;
        };

        LeftClickLeft {
            bindings = <&mkp LCLK>;
            key-positions = <16 15>;
        };

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <19 20>;
        };

        MiddleClickLeft {
            bindings = <&mkp MCLK>;
            key-positions = <13 14>;
        };

        MiddleClickRight {
            bindings = <&mkp MCLK>;
            key-positions = <21 22>;
        };

        DoubleQuote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <15 16>;
        };

        SingleQuote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 20>;
        };

        TildaSign {
            bindings = <&kp TILDE>;
            key-positions = <0 12>;
        };

        GraveSign {
            bindings = <&kp GRAVE>;
            key-positions = <12 24>;
        };

        MinusSign {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
        };

        PlusSign {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
        };

        UnderscoreSign {
            bindings = <&kp UNDERSCORE>;
            key-positions = <7 8>;
        };

        PipeSign {
            bindings = <&kp PIPE>;
            key-positions = <9 8>;
        };
    };

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };

        httl: ht_two_layers {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        tdtb: td_mouse_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&httl 7 4>, <&to 0>;

            tapping-term-ms = <200>;
        };

        tdtb2: td_slow_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&httl 7 0>, <&to 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp E        &kp R            &kp T          &kp Y        &kp U           &kp I      &kp O    &kp P     &lt 8 LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D        &kp F            &kp G          &kp H        &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT MINUS   &kp Z  &kp X  &kp C        &kp V            &kp B          &kp N        &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt RALT BSLH
                               &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET    &lt LWR ESC  &mt RSHFT BSPC  &lt 9 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3  &kp F4       &kp F5    &kp F6       &kp F7     &kp F8    &kp F9       &kp F10   &kp F11   &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH     &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR     &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3       &kp N4    &kp N5       &kp N6     &kp N7    &kp N8       &kp N9    &kp N0    &kp RALT
                                  &lt ADJ TAB  &trans    &trans       &trans     &trans    &lt ADJ DEL
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp LG(LS(NUMBER_4))  &kp PG_UP  &kp C_BRI_INC    &kp C_BRI_DN
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp UP                &kp RIGHT  &kp INS          &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp DOWN              &kp PG_DN  &kp PAUSE_BREAK  &kp RALT
                                             &trans     &trans     &lt ADJ RET     &lt ADJ ESC   &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans          &trans        &none         &trans
            >;
        };

        AUTO-MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &mkp MCLK    &trans  &trans  &trans  &trans  &trans  &trans
                        &tdtb2  &mkp LCLK  &mkp RCLK    &trans  &trans  &trans
            >;
        };

        GAME {
            bindings = <
&kp N1  &kp TAB    &kp Q  &kp W   &kp E      &kp R           &none  &none  &none  &none  &none  &to 0
&kp N2  &kp LCTRL  &kp A  &kp S   &kp D      &kp F           &none  &none  &none  &none  &none  &none
&kp N3  &kp LSHFT  &kp Z  &kp X   &kp C      &kp V           &none  &none  &none  &none  &none  &none
                          &trans  &kp SPACE  &kp LEFT_ALT    &none  &none  &none
            >;
        };

        SLOW {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &mkp MCLK    &trans  &trans  &trans  &trans  &trans  &trans
                        &tdtb2  &mkp LCLK  &mkp RCLK    &trans  &trans  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &mkp MCLK    &trans  &trans  &trans  &trans  &trans  &trans
                        &tdtb2  &mkp LCLK  &mkp RCLK    &trans  &trans  &trans
            >;
        };

        FBUTTONS_LAYER {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &trans  &trans           &trans     &trans    &trans    &trans
&trans  &trans  &trans  &trans   &trans   &trans     &trans  &trans           &trans     &trans    &trans    &trans
                        &trans   &trans   &trans     &trans  &trans           &trans
            >;
        };

        IDEA {
            bindings = <
&trans  &trans                   &trans                &trans                 &trans            &trans             &trans         &trans    &trans       &open_find_files  &trans  &trans
&trans  &intellij_open_terminal  &rectangle_left_half  &rectangle_right_half  &intellij_rename  &intellij_debug    &intellij_run  &go_back  &go_forward  &trans            &trans  &trans
&trans  &trans                   &trans                &trans                 &trans            &switch_windows    &trans         &trans    &trans       &trans            &trans  &trans
                                                       &trans                 &trans            &trans             &trans         &trans    &trans
            >;
        };
    };
};
